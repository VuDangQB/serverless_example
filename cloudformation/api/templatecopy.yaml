Description: |
  Create cloudformation demo

Parameters:
  ProjectName:
    Description: The name of the project (git repo).
    Type: String
    Default: serverless_example

  EnvironmentName:
    Description: The name of the target environment.
    Type: String
    # Default: dev
    AllowedValues: 
      - dev
      - qa
      - prod
  # VerticalName:
  #   Description: Short version of the Vertical (Team) name.
  #   Type: String

  # CodeBucket:
  #   Description: The S3 bucket containing the lambda code.
  #   Type: String
  #   Default: demo-serverless-vudang-aws

  # GitSha:
  #   Description: The GitSha of commit containing the Lambda code to be deployed.
  #   Type: String

  # ApiStageName:
  #   Description: The stage name to deploy the API Gateway with.
  #   Type: String

  # ApiDomainName:
  #   Description: The base domain name used to create the APIs custom domain.
  #   Type: String

  # ApiCertArn:
  #   Description: An AWS managed certificate for the API domain name.
  #   Type: String

  # ApiUsageBurstLimit:
  #   Description: The Api Burst Usage limit.
  #   Type: Number

  # ApiUsageRateLimit:
  #   Description: The rate Api Usage limit
  #   Type: Number

  # ApiUsageMonthlyLimit:
  #   Description: The monthly Api Usage limit.
  #   Type: Number

  # LambdaDeployDefaultSecurityGroupId:
  #   Description: The default security group id configured for the target VPC to deploy to.
  #   Type: String

  # LambdaDeploySubnetIds:
  #   Description: The subnet ids for the target VPC to deploy to.
  #   Type: CommaDelimitedList

  # LambdaLogLevel:
  #   Description: The loglevel for the API Gateway Lambda Function.
  #   Type: String
  #   AllowedValues:
  #   - DEBUG
  #   - INFO

  LambdaMemorySize:
    Description: The amount of memory the api function has access to.
    Type: Number
    # Default: 128
    MinValue: 128
    MaxValue: 1024

  # LambdaReservedConcurrentExecutions:
  #   Description: The number of simultaneous executions to reserve for the function.
  #   Type: Number

  LambdaRuntime:
    Description: The API Lambda runtime.
    Type: String
    Default: python3.7

  # LambdaTimeout:
  #   Description: The amount of time that Lambda allows a function to run before stopping it.
  #   Type: Number
  #   Default: 10

  # # ServiceKmsKeyId:
  # #   Description: The KMS key used to retrieve ssm parameters.
  # #   Type: String
  
  ProjectBucketName:
    Description: The bucket name of project deployed in permannet lifecycle
    Type: String
    # Default: serverless-lambdatest
  
  # ScheduleBulkJobCron:
  #   Description: The cron expression for scheduling bulk job on Diffbot service
  #   Type: String
  
  # ScheduleBulkState:
  #   Description: Indicates the schedule state is ENABLED or DISABLED
  #   Type: String
  
  # RetryTriggerCron:
  #   Description: The cron expression for retrying to download data from Diffbot
  #   Type: String
  
  # RetryTriggerState:
  #   Description: Indicates the retry trigger state is ENABLED or DISABLED
  #   Type: String
  
  DdbReadCapacityUnits:
    Description: The read throughput for the dynamodb tables.
    Type: Number
    # Default: 5

  DdbWriteCapacityUnits:
    Description: The write throughput for the dynamodb tables.
    Type: Number
    # Default: 5

# Conditions:
#   IsProdAccount: !Equals [ !Ref EnvironmentName, prod ]

Resources:
  UserTable:
      Type: AWS::DynamoDB::Table
      UpdateReplacePolicy: Retain
      Properties:
        TableName: !Sub "${ProjectName}_${EnvironmentName}_table"
        AttributeDefinitions:
            - AttributeName: "PK"
              AttributeType: "S"
            - AttributeName: "SK"
              AttributeType: "S"
        KeySchema:
        - AttributeName: "PK"
          KeyType: "HASH"
        - AttributeName: "SK"
          KeyType: "RANGE"
        BillingMode: "PROVISIONED"      
        ProvisionedThroughput:
            ReadCapacityUnits: !Ref DdbReadCapacityUnits
            WriteCapacityUnits: !Ref DdbWriteCapacityUnits

  # DemoLambdaFunction:
  #   Type: AWS::Lambda::Function
  #   Properties:
  #       Code:
  #           S3Bucket: !Ref CodeBucket
  #           S3Key: !Sub "${ProjectName}.zip"
  #       Description: !Sub "API Gateway Lambda for the project ${ProjectName}"
  #       Environment:
  #           Variables: 
  #               DEMO_ENVIRONMENT: !Ref EnvironmentName
  #       FunctionName: 
  #           - IsProd
  #           - !Sub "${EnvironmentName}-${ProjectName}-api"
  #           - !Sub "${EnvironmentName}-${ProjectName}-api"
  #       Handler: api.fn_api_handler.lambda_handler
  #       MemorySize: !Ref LambdaMemorySize
  #       Runtime: !Ref LambdaRuntime
  #       Timeout: !Ref LambdaTimeout
  #       Role: !GetAtt LambdaServiceRole.Arn

  # LambdaServiceRole:
  # Type: AWS::IAM::Role
  # Properties:
  #     RoleName:
  #         !If
  #         - IsProdAccount
  #         - !Sub "${EnvironmentName}-${ProjectName}-api-lambda"
  #         - !Sub "${EnvironmentName}-${ProjectName}-api-lambda"    
  #     AssumeRolePolicyDocument:
  #         Version: 2012-10-17
  #         Statement:
  #         - Effect: "Allow"
  #         Principal:
  #         Service: 
  #             - "lambda.amazonaws.com"
  #             - "events.amazonaws.com"
  #         Action: "sts:AssumeRole"
  #     ManagedPolicyArns:
  #       - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
  #       - "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
  #       - "arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess"
  #     Policies:
  #       - PolicyName: 
  #           - !Sub "${EnvironmentName}-${ProjectName}-api-s3"
  #         PolicyDocument:
  #         Version: 2012-10-17
  #         Statement:
  #           - Effect: "Allow"
  #             Action:
  #               - "s3:GetBucketLocation"
  #               - "s3:ListBucket"
  #             Resource:
  #               - !Sub "arn:aws:s3:::${ProjectBucketName}"
  #           - Effect: "Allow"
  #             Action:
  #               - "s3:GetObject*"
  #               - "s3:PutObject*"
  #               - "s3:DeleteObject*"
  #             Resource:
  #               - !Sub "arn:aws:s3:::${ProjectBucketName}/*"
  #       - PolicyName: 
  #           - !Sub "${EnvironmentName}-${ProjectName}-api-dynamodb"
  #         PolicyDocument:
  #         Version: 2012-10-17
  #         Statement:
  #           - Effect: "Allow"
  #             Action:
  #               - "dynamodb:GetItem"
  #               - "dynamodb:PutItem"
  #               - "dynamodb:UpdateItem"
  #               - "dynamodb:DeleteItem"
  #               - "dynamodb:UpdateTable"
  #               - "dynamodb:DescribeStream"
  #               - "dynamodb:GetRecords"
  #               - "dynamodb:Scan"
  #               - "dynamodb:Query"
  #             Resource:             
  #               - !GetAtt UserTable.Arn
